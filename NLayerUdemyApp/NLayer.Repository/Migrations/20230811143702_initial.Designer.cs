// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NLayer.Repository;

#nullable disable

namespace NLayer.Repository.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230811143702_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NLayer.Core.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Categories", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Pistols"
                        },
                        new
                        {
                            Id = 2,
                            Name = "SMGs"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Rifles"
                        },
                        new
                        {
                            Id = 4,
                            Name = "MTs"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Sniper Rifles"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Mounted MGs"
                        });
                });

            modelBuilder.Entity("NLayer.Core.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2023, 8, 11, 17, 37, 2, 408, DateTimeKind.Local).AddTicks(2840),
                            Name = "Sar9 Sport",
                            Price = 150m,
                            Stock = 20
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2023, 8, 11, 17, 37, 2, 408, DateTimeKind.Local).AddTicks(2850),
                            Name = "Sar9",
                            Price = 100m,
                            Stock = 20
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2023, 8, 11, 17, 37, 2, 408, DateTimeKind.Local).AddTicks(2851),
                            Name = "Kılınç 2000 Mega",
                            Price = 100m,
                            Stock = 20
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 1,
                            CreatedDate = new DateTime(2023, 8, 11, 17, 37, 2, 408, DateTimeKind.Local).AddTicks(2851),
                            Name = "Kılınç 2000 Light",
                            Price = 100m,
                            Stock = 20
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 2,
                            CreatedDate = new DateTime(2023, 8, 11, 17, 37, 2, 408, DateTimeKind.Local).AddTicks(2852),
                            Name = "Sar109T",
                            Price = 250m,
                            Stock = 30
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2023, 8, 11, 17, 37, 2, 408, DateTimeKind.Local).AddTicks(2853),
                            Name = "MPT 76 SH",
                            Price = 350m,
                            Stock = 40
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 3,
                            CreatedDate = new DateTime(2023, 8, 11, 17, 37, 2, 408, DateTimeKind.Local).AddTicks(2854),
                            Name = "Sar 15T",
                            Price = 375m,
                            Stock = 40
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 4,
                            CreatedDate = new DateTime(2023, 8, 11, 17, 37, 2, 408, DateTimeKind.Local).AddTicks(2854),
                            Name = "Sar 762 MT",
                            Price = 1000m,
                            Stock = 40
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 5,
                            CreatedDate = new DateTime(2023, 8, 11, 17, 37, 2, 408, DateTimeKind.Local).AddTicks(2855),
                            Name = "Bora 12 - JNG 90",
                            Price = 1500m,
                            Stock = 5
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 6,
                            CreatedDate = new DateTime(2023, 8, 11, 17, 37, 2, 408, DateTimeKind.Local).AddTicks(2856),
                            Name = "Sarsılmaz 127 MT",
                            Price = 10000m,
                            Stock = 10
                        });
                });

            modelBuilder.Entity("NLayer.Core.ProductFeature", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AdditionalFeatures")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("AmmoCap")
                        .HasMaxLength(500)
                        .HasColumnType("int");

                    b.Property<int>("BarrelLenght")
                        .HasColumnType("int");

                    b.Property<string>("Caliber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Height")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("TriggerSystem")
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.Property<int>("Width")
                        .HasColumnType("int");

                    b.Property<int>("length")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId")
                        .IsUnique();

                    b.ToTable("ProductFeatures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AdditionalFeatures = "Polimer Gövde, Metal Şarjör",
                            AmmoCap = 19,
                            BarrelLenght = 160,
                            Caliber = "9 x 19mm",
                            Color = "Black",
                            Height = 150,
                            ProductId = 1,
                            TriggerSystem = "Çift Hareketli",
                            Weight = 1500,
                            Width = 30,
                            length = 200
                        },
                        new
                        {
                            Id = 2,
                            AdditionalFeatures = "Polimer Gövde, Metal Şarjör",
                            AmmoCap = 15,
                            BarrelLenght = 150,
                            Caliber = "9 x 19mm",
                            Color = "Black",
                            Height = 150,
                            ProductId = 2,
                            TriggerSystem = "Çift Hareketli",
                            Weight = 1500,
                            Width = 30,
                            length = 200
                        },
                        new
                        {
                            Id = 3,
                            AdditionalFeatures = "Polimer Gövde, Metal Şarjör",
                            AmmoCap = 15,
                            BarrelLenght = 150,
                            Caliber = "9 x 19mm",
                            Color = "Black",
                            Height = 150,
                            ProductId = 3,
                            TriggerSystem = "Çift Hareketli",
                            Weight = 1500,
                            Width = 30,
                            length = 200
                        },
                        new
                        {
                            Id = 4,
                            AdditionalFeatures = "Polimer Gövde, Metal Şarjör",
                            AmmoCap = 15,
                            BarrelLenght = 150,
                            Caliber = "9 x 19mm",
                            Color = "Black",
                            Height = 150,
                            ProductId = 4,
                            TriggerSystem = "Çift Hareketli",
                            Weight = 1500,
                            Width = 30,
                            length = 200
                        },
                        new
                        {
                            Id = 5,
                            AdditionalFeatures = "Polimer Gövde, Metal Şarjör",
                            AmmoCap = 30,
                            BarrelLenght = 450,
                            Caliber = "9 x 19mm",
                            Color = "Black",
                            Height = 250,
                            ProductId = 5,
                            TriggerSystem = "Çift Hareketli",
                            Weight = 2500,
                            Width = 30,
                            length = 600
                        },
                        new
                        {
                            Id = 6,
                            AdditionalFeatures = "Polimer Gövde, Metal Şarjör",
                            AmmoCap = 30,
                            BarrelLenght = 700,
                            Caliber = "7.62 x 39mm",
                            Color = "Black",
                            Height = 300,
                            ProductId = 6,
                            TriggerSystem = "Çift Hareketli",
                            Weight = 3500,
                            Width = 30,
                            length = 900
                        },
                        new
                        {
                            Id = 7,
                            AdditionalFeatures = "Polimer Gövde, Metal Şarjör",
                            AmmoCap = 30,
                            BarrelLenght = 700,
                            Caliber = "7.62 x 39mm",
                            Color = "Black",
                            Height = 300,
                            ProductId = 7,
                            TriggerSystem = "Çift Hareketli",
                            Weight = 3500,
                            Width = 30,
                            length = 900
                        },
                        new
                        {
                            Id = 8,
                            AdditionalFeatures = "Polimer Gövde, Metal Şarjör",
                            AmmoCap = 100,
                            BarrelLenght = 750,
                            Caliber = "7.62 x 39mm",
                            Color = "Black",
                            Height = 300,
                            ProductId = 8,
                            TriggerSystem = "Çift Hareketli",
                            Weight = 4500,
                            Width = 30,
                            length = 1300
                        },
                        new
                        {
                            Id = 9,
                            AdditionalFeatures = "Polimer Gövde, Metal Şarjör",
                            AmmoCap = 10,
                            BarrelLenght = 860,
                            Caliber = "7.62 x 39mm",
                            Color = "Black",
                            Height = 300,
                            ProductId = 9,
                            TriggerSystem = "Çift Hareketli",
                            Weight = 12500,
                            Width = 30,
                            length = 1000
                        },
                        new
                        {
                            Id = 10,
                            AdditionalFeatures = "Polimer Gövde, Metal Şarjör",
                            AmmoCap = 250,
                            BarrelLenght = 750,
                            Caliber = "7.62 x 39mm",
                            Color = "Black",
                            Height = 450,
                            ProductId = 10,
                            TriggerSystem = "Çift Hareketli",
                            Weight = 15000,
                            Width = 30,
                            length = 1400
                        });
                });

            modelBuilder.Entity("NLayer.Core.Product", b =>
                {
                    b.HasOne("NLayer.Core.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("NLayer.Core.ProductFeature", b =>
                {
                    b.HasOne("NLayer.Core.Product", "Product")
                        .WithOne("ProductFeature")
                        .HasForeignKey("NLayer.Core.ProductFeature", "ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("NLayer.Core.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("NLayer.Core.Product", b =>
                {
                    b.Navigation("ProductFeature");
                });
#pragma warning restore 612, 618
        }
    }
}
